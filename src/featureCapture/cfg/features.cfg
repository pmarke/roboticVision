#!/usr/bin/env python

PACKAGE = "feature_capture"

import cv2

from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()


# name, type, value, description
ksize_enum = gen.enum([gen.const("1", int_t,1,""),
					   gen.const("3",int_t,3,""),
					   gen.const("5",int_t,5,""),
					   gen.const("7",int_t,7,"")],"ksize")

border_type_enum = gen.enum([gen.const("BORDER_REPLICATE",int_t,cv2.BORDER_REPLICATE,"aaaaaa|abcdefgh|hhhhhhh"),
							 gen.const("BORDER_REFLECT",int_t,cv2.BORDER_REFLECT,"fedcba|abcdefgh|hgfedcb"),
							 gen.const("BORDER_REFLECT_101",int_t,cv2.BORDER_REFLECT_101,"gfedcb|abcdefgh|gfedcba"),
							 gen.const("BORDER_WRAP",int_t,cv2.BORDER_WRAP,"cdefgh|abcdefgh|abcdefg"),
							 gen.const("BORDER_CONSTANT",int_t,cv2.BORDER_CONSTANT,"iiiiii|abcdefgh|iiiiiii"),
							 gen.const("BORDER_DEFAULT",int_t,cv2.BORDER_DEFAULT,"")],"borderType")


#name, type, level, description, defualt, min, max
gen.add("block_size", int_t, 0, "neighborhood size: block_size X block_size (pixels)", 3, 1, 100);
gen.add("ksize",int_t,0,"size of the extended sobel kernel",1,1,7,edit_method=ksize_enum);
gen.add("k",double_t, 0, "Harris detector free parameter", 0.05, 0.01, 1);
gen.add("border_type",int_t,0,"Pixel extrapolation method to create pixels",cv2.BORDER_REPLICATE,edit_method=border_type_enum)








exit(gen.generate(PACKAGE, "feature_node", "cornerHarris" ))